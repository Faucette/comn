(function(dependencies, global) {
    var cache = [];

    function require(index) {
        var module = cache[index],
            callback, exports;

        if (module === undefined) {
            callback = dependencies[index];
            exports = {};

            cache[index] = module = {
                exports: exports,
                require: require
            };

            callback.call(exports, require, exports, module, global);
        }

        return module.exports;
    }

    require.resolve = function(path) {
        return path;
    };

    if (typeof(define) === "function" && define.amd) {
        define([], function() {
            return require(0);
        });
    } else if (typeof(module) !== "undefined" && module.exports) {
        module.exports = require(0);
    } else {

        require(0);

    }
}([
    function(require, exports, module, global) {

        var app = require(1);


        app.init();


        var math = require(6);
        console.log(math.add(10, 5));


    },
    function(require, exports, module, global) {

        var folder = require(2);


        var app = exports;


        app.init = function() {
            var test = require(4),
                mod = require(5);

            mod.set("asdf");

            console.log(mod.get());
            console.log(test(true));
        };

        console.log(folder);


    },
    function(require, exports, module, global) {

        var folder = exports;


        folder.file = require(3);


    },
    function(require, exports, module, global) {

        var __dirname = module.dirname = "./folder";
        var __filename = module.id = module.filename = "./folder/file.js";
        var file = exports;


        file.name = __filename;
        file.directory = __dirname;


    },
    function(require, exports, module, global) {

        module.exports = function test(value) {
            return value === true;
        };


    },
    function(require, exports, module, global) {

        var mod = exports,
            value = null;


        mod.set = function(newValue) {
            value = newValue;
        };

        mod.get = function() {
            return value;
        };


    },
    function(require, exports, module, global) {

        var math = exports;

        math.add = require(7);
        math.sub = require(8);


    },
    function(require, exports, module, global) {

        module.exports = function add(a, b) {
            return a + b;
        };


    },
    function(require, exports, module, global) {

        module.exports = function sub(a, b) {
            return a - b;
        };


    }
], (new Function("return this;"))()));
