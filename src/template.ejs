(function(dependencies, modules, global) {
    var cache = {};

    function require(path) {
        var module = cache[path],
            callback, exports;

        if (module === undefined) {
            callback = dependencies[path];
            exports = {};

            cache[path] = module = {
                exports: exports,
                require: require
            };

            callback.call(exports, require, exports, module, global);
        }

        return module.exports;
    }

    require.resolve = function(path) {
        return path;
    };

    <% if (parseAsync === true) { %>

    require.async = function(index, callback) {
        var module = cache[index],
            path, node;

        if (module) {
            callback(module.exports);
            return;
        }

        path = modules[index];
        node = document.createElement("script");

        function onload() {
            callback(require(index));
        }

        node.type = "application/javascript";
        node.charset = "utf-8";
        node.async = true;

        if (node.attachEvent) {
            node.attachEvent("onreadystatechange", onload);
        } else if (node.addEventListener) {
            node.addEventListener("load", onload, false);
        } else {
            node.onreadystatechange = onload;
        }

        node.src = path;
        document.head.appendChild(node);
    };

    global.__define__ = function(index, moduleDependencies) {
        var key;
        if (modules[index]) {
            for (key in moduleDependencies) {
                if (!dependencies[key]) {
                    dependencies[key] = moduleDependencies[key];
                }
            }
        }
    };

    <% } %>

    if (typeof(define) === "function" && define.amd) {
        define([], function() {
            return require(0);
        });
    } else if (typeof(module) !== "undefined" && module.exports) {
        module.exports = require(0);
    } else {
        <% if (exportName) { %>
        global.<%= exportName %> = require(0);
        <% } else { %>
        require(0);
        <% } %>
    }
}(<%= dependencies %>, <%= modules %>, (new Function("return this;"))()));
